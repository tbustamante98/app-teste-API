// <auto-generated />
using System;
using API.Funcionarios.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Funcionarios.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Funcionarios.Entities.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnName("nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnName("nome_completo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnName("sexo")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("funcionarios");
                });

            modelBuilder.Entity("API.Funcionarios.Entities.FuncionarioHabilidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FuncionarioId")
                        .HasColumnName("funcionario_id")
                        .HasColumnType("int");

                    b.Property<int>("HabilidadeId")
                        .HasColumnName("habilidade_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("funcionario_habilidades");
                });

            modelBuilder.Entity("API.Funcionarios.Entities.Habilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("habilidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Java"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Angular"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "SQL"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "ASP"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
